/*
 Example
  .icon-close {
    background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 6.35 6.35"><path d="M3.168 0A3.175 3.175 0 0 0 .342 1.74 3.175 3.175 0 0 0 1.727 6a3.175 3.175 0 0 0 4.266-1.363l.03-.056A3.175 3.175 0 0 0 4.594.335 3.175 3.175 0 0 0 3.168 0zm-.807 1.852l.814.816.813-.816.51.502-.818.82.818.822-.51.502-.813-.816-.814.816-.51-.502.819-.821-.818-.82z" fill="#999"/></svg>');
  }
*/

// Function to create an optimized svg url
@function svg-url($svg){
    //
    // Add missing namespace
    //
    @if not str-index($svg,xmlns) {
     $svg: str-replace($svg, '<svg','<svg xmlns="http://www.w3.org/2000/svg"');
    }
    //
    // Chunk up string in order to avoid
    // "stack level too deep" error
    //
    $encoded:'';
    $slice: 2000;
    $index: 0;
    $loops: ceil(str-length($svg)/$slice);
    @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    //
    // Encode
    //
    $chunk: str-replace($chunk, '"', '\'');
    $chunk: str-replace($chunk, '%', '%25');
    $chunk: str-replace($chunk, '#', '%23');
    $chunk: str-replace($chunk, '{', '%7B');
    $chunk: str-replace($chunk, '}', '%7D');
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');
    //
    // The maybe list
    //
    // Keep size and compile time down
    // ... only add on documented fail
    //
    // $chunk: str-replace($chunk, '&', '%26');
    // $chunk: str-replace($chunk, '|', '%7C');
    // $chunk: str-replace($chunk, '[', '%5B');
    // $chunk: str-replace($chunk, ']', '%5D');
    // $chunk: str-replace($chunk, '^', '%5E');
    // $chunk: str-replace($chunk, '`', '%60');
    // $chunk: str-replace($chunk, ';', '%3B');
    // $chunk: str-replace($chunk, '?', '%3F');
    // $chunk: str-replace($chunk, ':', '%3A');
    // $chunk: str-replace($chunk, '@', '%40');
    // $chunk: str-replace($chunk, '=', '%3D');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
    }
    @return url("data:image/svg+xml,#{$encoded}");
  }
  
  // Helper function to replace characters in a string
  @function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    @return if($index,
    str-slice($string, 1, $index - 1) + $replace +
    str-replace(str-slice($string, $index +
    str-length($search)), $search, $replace),
    $string);
  }